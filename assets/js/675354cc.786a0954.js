"use strict";(self.webpackChunknotus_docs=self.webpackChunknotus_docs||[]).push([[9921],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,h=m["".concat(c,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(h,s(s({ref:t},l),{},{components:n})):r.createElement(h,s({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1782:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),s=["components"],i={},c="JSONRPC",p={unversionedId:"Api/RPC",id:"Api/RPC",title:"JSONRPC",description:"Currently, this documentation is in the draft stage. It may contain word correct or incorrect information",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/Api/RPC.md",sourceDirName:"Api",slug:"/Api/RPC",permalink:"/Api/RPC",draft:!1,editUrl:"https://github.com/notus-labs/docs/tree/main/docs/Api/RPC.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"/status",permalink:"/Api/REST/NFT/status"},next:{title:"Websocket",permalink:"/Api/WebSocket"}},l={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Listening Port",id:"listening-port",level:2},{value:"How to use JSONRPC Client",id:"how-to-use-jsonrpc-client",level:2},{value:"JavaScript",id:"javascript",level:3},{value:"Python",id:"python",level:3},{value:"C#",id:"c",level:3},{value:"Methods",id:"methods",level:2}],m={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"jsonrpc"},"JSONRPC"),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Currently, this documentation is in the draft stage. It may contain word correct or incorrect information"))),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"JSONRPC is a remote procedure call protocol encoded in JSON. It\u2019s lightweight, stateless, open and can be used to communicate between different programming languages. The protocol itself is not tied to any particular language or framework but it has become very popular with blockchain platforms like Ethereum because it uses HTTP requests and responses to communicate between client-server applications."),(0,a.kt)("h2",{id:"listening-port"},"Listening Port"),(0,a.kt)("p",null,"The default listening port for JSONRPC is 8545."),(0,a.kt)("h2",{id:"how-to-use-jsonrpc-client"},"How to use JSONRPC Client"),(0,a.kt)("p",null,"You can send JSONRPC requests to the node using any JSONRPC client and any programming language. Here are some examples:"),(0,a.kt)("h3",{id:"javascript"},"JavaScript"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/open-rpc/client-js"},(0,a.kt)("strong",{parentName:"a"},"@open-rpc/client-js"))," is a JavaScript client for JSONRPC. It can be used to send requests to the node using JavaScript."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { RequestManager, HTTPTransport, Client } from "@open-rpc/client-js";\nconst transport = new HTTPTransport("http://localhost:8545");\nconst client = new Client(new RequestManager([transport]));\nconst result = await client.request({ method: "ping", params: [2, 2] });\n// => { jsonrpc: \'2.0\', id: 1, result: [ "pong" ] }\n')),(0,a.kt)("h3",{id:"python"},"Python"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/explodinglabs/jsonrpcclient"},(0,a.kt)("strong",{parentName:"a"},"json-rpc"))," is a Python client for JSONRPC. It can be used to send requests to the node using Python."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},'import requests\nimport json\n\n\ndef main():\n    url = "http://localhost:8545"\n\n    # Example echo method\n    payload = {\n        "method": "ping",\n        "params": [],\n        "jsonrpc": "2.0",\n        "id": 1,\n    }\n    response = requests.post(url, json=payload).json()\nif __name__ == "__main__":\n    main()\n# { jsonrpc: \'2.0\', id: 1, result: [ "pong" ] }\n')),(0,a.kt)("h3",{id:"c"},"C#"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/adamashton/json-rpc-csharp"},(0,a.kt)("strong",{parentName:"a"},"json-rpc-csharp"))," is a C# client for JSONRPC. It can be used to send requests to the node using C#."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},'using JsonRPC;\nusing Newtonsoft.Json.Linq;\n\nusing (Client rpcClient = new Client(@"http://localhost:8545"))\n{\n    Request request = rpcClient.NewRequest("ping");\n    GenericResponse response = rpcClient.Rpc(request);\n\n    if (response.Result != null)\n    {\n        JToken result = response.Result;\n    }\n    else\n        Console.WriteLine(string.Format("Error in response, code:{0} message:{1}",\n            response.Error.Code, response.Error.Message);\n\n\n    // Example with positional parameters\n    JArray parameters = JArray.Parse(@"[\'Small\', \'Medium\', \'Large\' ]");\n    Request resuestWithPostionalParameters = rpcClient.NewRequest("ping", parameters);\n\n    // Example with named parameters\n    JObject namedParameters = JObject.Parse(@"{ CPU: \'Intel\', }");\n    Request resuestWithNamedParameters = rpcClient.NewRequest("ping", namedParameters);\n}\n// { jsonrpc: \'2.0\', id: 1, result: [ "pong" ] }\n')),(0,a.kt)("h2",{id:"methods"},"Methods"))}d.isMDXComponent=!0}}]);