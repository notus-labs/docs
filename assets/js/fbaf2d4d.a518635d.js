"use strict";(self.webpackChunknotus_docs=self.webpackChunknotus_docs||[]).push([[4736],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return p}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(a),p=r,f=u["".concat(l,".").concat(p)]||u[p]||h[p]||i;return a?n.createElement(f,o(o({ref:t},d),{},{components:a})):n.createElement(f,o({ref:t},d))}));function p(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},3805:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return p},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return h}});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),o=["components"],s={},l="General Design of Notus Network",c={unversionedId:"Overview/Basics/intro",id:"Overview/Basics/intro",title:"General Design of Notus Network",description:"Currently, this documentation is in the draft stage. It may contain word correct or incorrect information.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/Overview/Basics/intro.md",sourceDirName:"Overview/Basics",slug:"/Overview/Basics/intro",permalink:"/Overview/Basics/intro",draft:!1,editUrl:"https://github.com/notus-labs/docs/tree/main/docs/Overview/Basics/intro.md",tags:[],version:"current",frontMatter:{},sidebar:"overview",previous:{title:"Overview",permalink:"/"},next:{title:"How Notus Works?",permalink:"/Overview/Basics/how_it_works"}},d={},h=[{value:"Multiple Transaction Pools",id:"multiple-transaction-pools",level:2},{value:"Complex Block Architecture",id:"complex-block-architecture",level:2},{value:"Nonce Calculation",id:"nonce-calculation",level:2},{value:"Float Calculation",id:"float-calculation",level:3},{value:"Jump Calculation",id:"jump-calculation",level:3},{value:"Miner/Validator (NoVa)",id:"minervalidator-nova",level:2},{value:"Node Queue Consensus",id:"node-queue-consensus",level:2},{value:"Virtual Machine",id:"virtual-machine",level:2},{value:"State-Based Block Structure",id:"state-based-block-structure",level:2},{value:"Microchain",id:"microchain",level:2},{value:"Reliable NFT",id:"reliable-nft",level:2},{value:"Wallet",id:"wallet",level:2},{value:"How to create a Notus Wallet?",id:"how-to-create-a-notus-wallet",level:3},{value:"Creating Keywords",id:"creating-keywords",level:4},{value:"Private Key",id:"private-key",level:4},{value:"Public Key",id:"public-key",level:4},{value:"Wallet Address",id:"wallet-address",level:4},{value:"Heritage-Based Wallet",id:"heritage-based-wallet",level:3},{value:"Time-Based Cold Wallet",id:"time-based-cold-wallet",level:3}],u={toc:h};function p(e){var t=e.components,s=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"general-design-of-notus-network"},"General Design of Notus Network"),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Currently, this documentation is in the draft stage. It may contain word correct or incorrect information."))),(0,i.kt)("h2",{id:"multiple-transaction-pools"},"Multiple Transaction Pools"),(0,i.kt)("p",null,"The main focus of Notus architecture is task distribution architecture for miners/validators in the network as a solution to the scaling problem, which is one of the main problems of blockchain platforms. The most effective way to overcome the bottleneck caused by network density underlying scaling problems has been considered to be the design of multiple transaction pools."),(0,i.kt)("p",null,"Multiple Transaction Pools Benefits"),(0,i.kt)("p",null,"\xb7 Unlimited transaction skill ",(0,i.kt)("br",null),"\n\xb7 Quick access to transactions by Miners/Verifiers ",(0,i.kt)("br",null),"\n\xb7 Minimum network traffic density ",(0,i.kt)("br",null)),(0,i.kt)("h2",{id:"complex-block-architecture"},"Complex Block Architecture"),(0,i.kt)("p",null,"Today, there are 2 types of blocks in blockchain networks: payment transactions and smart contracts. Although the entire network is designed to process these blocks, this structure cannot meet different needs at different levels. While the Notus architecture was being designed, it was designed both for a closed network structure and for solving the blockchain needs of an online network with a single network."),(0,i.kt)("p",null,"In the Notus architecture, each ring can represent a different transaction type. Although this is not mandatory, it can be this way depending on the transaction situation."),(0,i.kt)("p",null,"For example;"),(0,i.kt)("p",null,"\xb7 Block number 1; receive payment transactions, ",(0,i.kt)("br",null),"\n\xb7 Block number 2; It may contain metadata where the NFT image is stored, ",(0,i.kt)("br",null),"\n\xb7 Block number 3; may include smart contracts, ",(0,i.kt)("br",null),"\n\xb7 Block number 4; account security data etc. may contain. ",(0,i.kt)("br",null)),(0,i.kt)("p",null,"The Notus network is designed to host large raw data such as files and similar on different micro chains to reduce the density of the Mainnet."),(0,i.kt)("p",null,"The process of grouping transactions during block creation works as tracks:"),(0,i.kt)("p",null,"\xb7 If the block type is the same, transactions are taken from the pool before the specified time is exceeded, and a block is created with the maximum number of transactions and added to the chain. ",(0,i.kt)("br",null),"\n\xb7 When different types of transactions accumulate in the pool, priority is given to the transaction of the first type. If the following transaction types are the same, they are saved in the same block within the maximum block production time and added to the chain. ",(0,i.kt)("br",null),"\n\xb7 The behavior of other transaction types is also done by tracking this structure. ",(0,i.kt)("br",null)),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Block Architecture",src:a(5556).Z,width:"2127",height:"1276"})),(0,i.kt)("h2",{id:"nonce-calculation"},"Nonce Calculation"),(0,i.kt)("p",null,'The number that must be calculated for each block created in the blockchain is known as the nonce value. This value is calculated with the Hash algorithm and ensures block accuracy. Since the nonce value is calculated specifically for each block, it guarantees content integrity. In this way, it is ensured that the hash algorithms are not affected by the "Collision" results.'),(0,i.kt)("p",null,"In the Notus architecture, the nonce array is calculated instead of the nonce number. While calculating the Nonce array, it is created using 2 different methods. The first of these is called \u201cFloat Calculation\u201d and the second method is called \u201cJump Calculation\u201d."),(0,i.kt)("p",null,'The main reason for designing a different structure in the Nonce calculation method is to increase the difficulty level of block security. However, when we increase the difficulty level, there is transaction time, processor power, and more energy consumption. With the "Float Calculation" and "Jump Calculation" structures developed by Notus, block creation operations can be performed without sacrificing security, with less processor power, faster transaction time, and consuming less energy.'),(0,i.kt)("h3",{id:"float-calculation"},"Float Calculation"),(0,i.kt)("p",null,'SHA-256 for the "Float Calculation" method; the calculation number of steps (N) values is calculated with the below formula.'),(0,i.kt)("p",null,"N = (\u03b1 \u2013 \u03b2) + 1"),(0,i.kt)("p",null,"\u03b1 = Hex length of the hash algorithm"),(0,i.kt)("p",null,"\u03b2 = Difficulty level length"),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Example for Float Calculation;"),(0,i.kt)("p",null,"Using the SHA-256 hash algorithm for the new block created"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Float Calculation",src:a(1867).Z,width:"2127",height:"774"})),(0,i.kt)("p",null,"Steps"),(0,i.kt)("p",null,"For Step 1: 8.325"),(0,i.kt)("p",null,"For Step 2: 7.965"),(0,i.kt)("p",null,"For Step 3: 4.862"),(0,i.kt)("p",null,"\u2026\u2026."),(0,i.kt)("p",null,"\u2026\u2026"),(0,i.kt)("p",null,"For step (N-2): 3.258"),(0,i.kt)("p",null,"For step (N-1): 1.542"),(0,i.kt)("p",null,"For step (N): 9.104"),(0,i.kt)("p",null,"The result list will be combined with a separator. A value such as # can be used as a separator."),(0,i.kt)("p",null,"8325 # 7965 # 4862 # \u2026\u2026\u2026\u2026\u2026\u2026\u2026..\u2026\u2026\u2026\u2026\u2026\u2026 # 3258 # 1542 # 9104"),(0,i.kt)("h3",{id:"jump-calculation"},"Jump Calculation"),(0,i.kt)("p",null,'SHA-256 for the "Jump Calculation" method; the calculation number of steps (N) values is calculated with the below formula.'),(0,i.kt)("p",null,"N = Ceil(\u03b1 \u2013 \u03b2)"),(0,i.kt)("p",null,"\u03b1 = Hex length of the hash algorithm"),(0,i.kt)("p",null,"\u03b2 = Difficulty level length"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Jump Calculation",src:a(9844).Z,width:"2127",height:"774"})),(0,i.kt)("p",null,"Steps"),(0,i.kt)("p",null,"For Step 1: 8.325"),(0,i.kt)("p",null,"For Step 2: 7.965"),(0,i.kt)("p",null,"For Step 3: 4.862"),(0,i.kt)("p",null,"\u2026\u2026."),(0,i.kt)("p",null,"\u2026\u2026"),(0,i.kt)("p",null,"For step (N-2): 3.258"),(0,i.kt)("p",null,"For step (N-1): 1.542"),(0,i.kt)("p",null,"For step (N): 9.104"),(0,i.kt)("p",null,"The result list will be combined with a separator. A value such as # can be used as a separator."),(0,i.kt)("p",null,"8325 # 7965 # 4862 # \u2026\u2026\u2026\u2026\u2026\u2026\u2026..\u2026\u2026\u2026\u2026\u2026\u2026 # 3258 # 1542 # 9104"),(0,i.kt)("h2",{id:"minervalidator-nova"},"Miner/Validator (NoVa)"),(0,i.kt)("p",null,"The main focus of Notus architecture is task distribution architecture for miners/validators in the network as a solution to the scaling problem, which is one of the main problems of blockchain platforms. The most effective way to overcome the bottleneck caused by network density underlying scaling problems has been considered to be the design of multiple transaction pools."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Block Node Architecture",src:a(5503).Z,width:"2127",height:"1276"})),(0,i.kt)("p",null,"The Notus architecture is designed as 3 rings and is ordered from the inside out as follows:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Master Node"),(0,i.kt)("p",{parentName:"li"},"Represents nodes set up by Notus Network and nodes with fixed IP. The IP addresses of these nodes are embedded in the source code.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Main Node"),(0,i.kt)("p",{parentName:"li"},"Represents miners with a defined system configuration. The IP addresses of these miners are stored by each node inside the local nodes.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Archive Node"),(0,i.kt)("p",{parentName:"li"},"a. Full Node"),(0,i.kt)("p",{parentName:"li"},"Represents a low system configuration node type that keeps all copies of blocks generated in the network but does not create new blocks."),(0,i.kt)("p",{parentName:"li"},"b. Light Node"),(0,i.kt)("p",{parentName:"li"},"It represents the node type that keeps all the block signatures produced in the network but does not create new blocks."))),(0,i.kt)("h2",{id:"node-queue-consensus"},"Node Queue Consensus"),(0,i.kt)("p",null,"Every node joining the Notus network for transaction verification purposes must have a wallet address. This wallet address primarily determines the account to which the token rewards earned by the validators as a result of their transactions will be transferred. As a secondary use, it determines the order in which validators will operate."),(0,i.kt)("p",null,"Notus Network places the validators in a queue to ensure that the validators work efficiently and ensures that all transactions are done in that order. The operation steps are as follows."),(0,i.kt)("p",null,"Each node shares its wallet address with other nodes and requests wallet addresses on its other nodes."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Transaction Protocol",src:a(7641).Z,width:"2127",height:"1277"})),(0,i.kt)("p",null,"When the exchange of wallet addresses is complete:"),(0,i.kt)("p",null,"\xb7 All wallet addresses are converted from the 58 number system to the 10 number system. ",(0,i.kt)("br",null),"\n\xb7 Since all wallet addresses will be unique, there will be no conflicts in the numbers that will appear. ",(0,i.kt)("br",null),"\n\xb7 All wallet addresses are sorted from smallest to largest. ",(0,i.kt)("br",null),"\n\xb7 The wallet address of the newly added node to the list cannot be processed for 2 rounds. ",(0,i.kt)("br",null),"\n\xb7 The time allocated for each node is 0.2 Seconds. ",(0,i.kt)("br",null),"\n\xb7 If each node does not complete the transaction within the allotted time, all nodes go to the other node in the sorted list for the current block. ",(0,i.kt)("br",null),"\n\xb7 The node that does not deliver the block creation process 3 times within the specified time is subject to a 1-hour exclusion from the network by other nodes. ",(0,i.kt)("br",null)),(0,i.kt)("h2",{id:"virtual-machine"},"Virtual Machine"),(0,i.kt)("p",null,"Today, smart contracts are developed based on EVM (Ethereum Virtual Machine). This has some advantages. One of these benefits is the ease of conversion and execution for 1-byte Opcode instruction sets (Assembly). The disadvantage is that the developers and experts of the Solidity programming language are few, and the fact that the Solidity programming language causes hacking incidents clearly shows the need for a new programming language and structure."),(0,i.kt)("p",null,"Notus recommends choosing and using the widely used JavaScript programming language for writing smart contracts, considering both its community size and its easy learning. It is planned to create a Double-Opcode Notus Virtual Machine for the purpose of adding new commands and backward support to the EVM."),(0,i.kt)("h2",{id:"state-based-block-structure"},"State-Based Block Structure"),(0,i.kt)("p",null,'Blockchain technology outlines are built on smart contracts and coin/token transfers. Programming knowledge is required for the variety of transactions that can be made with smart contracts. As the use of smart contracts increased, the vulnerabilities of the written codes began to increase day by day. Adding block types to the chain that can meet the specific needs thanks to the Mixed Block architecture we developed with Notus Network provides benefits to the developer in terms of creation and to the user in terms of security. The biggest example of State-Based Block Architecture is the token generation structure. With the simple interface added to the architecture for this structure, the necessity of creating a contract to create tokens with "Zero Code" is eliminated.'),(0,i.kt)("h2",{id:"microchain"},"Microchain"),(0,i.kt)("p",null,"The Notus blockchain architecture has been developed to meet different needs during the design phase. Different sub-micro chains have been added to the platform in order to respond to different changing and shaped needs and to move more dynamically. Micro chains, which give Notus Network a modular structure, can be shaped according to the situation by increasing or decreasing the number of micro chains depending on the operation on the platform together with the network upgrade. The task distribution of these micro chains is considered as the division of different types of transactions (Coin/token transfer, NFT, smart contracts, etc.) in other blockchain platforms into separate micro chains."),(0,i.kt)("p",null,"For example;\nIn other blockchains, the explanation text cannot be written during coin or token transfer. To make up for this shortcoming, the number 4 microchain has been assigned for this process. Thus, the density on the main chain is reduced and additional information is provided in the transactions. Detailed information about micro chains will be given separately."),(0,i.kt)("h2",{id:"reliable-nft"},"Reliable NFT"),(0,i.kt)("p",null,"At Notus, we believe that NFTs are not just visual elements.\nWe think that NFTs actually consist of different digital materials such as documents, audio, video and visuals, but their use case is limited. We witness that the biggest problem in all current NFT projects is that digital materials are easily copied and recreated on other platforms with third-party integration solutions."),(0,i.kt)("p",null,"A separate structure has been added as a state-based NFT micro chain within the Notus architecture. With this state-based structure, digital content will be stored in an encrypted manner. In this way, only the owner of the NFT will be able to see the original NFT, while others will be able to see a replica of the NFT. Thanks to this security layer, Notus ensures that the NFT ecosystem (such as audio, video, music and contracts, etc.) is widely used and this process is easily managed."),(0,i.kt)("p",null,"For example;\nLeonardo Da Vinci's Mona Lisa in the Louvre museum can be given. Almost all museums display replicas rather than originals. When the replica work is damaged or stolen, the original work continues to protect its existence secretly. This gives the museum an easier and trouble-free management."),(0,i.kt)("h2",{id:"wallet"},"Wallet"),(0,i.kt)("p",null,"Wallets are one of the most fundamental building blocks that enable users to experience blockchain. The main way users can transact on the blockchain is through digital signatures given the ability to be used with these wallets. Users sign transactions using their private keys. This signing and verification is done using the relevant public keys (Public and Private Key). And the transaction is executed."),(0,i.kt)("p",null,"As in other blockchain networks, all transactions (Transfer, Smart Contract, NFT, etc.) on Notus Network are made through wallets."),(0,i.kt)("h3",{id:"how-to-create-a-notus-wallet"},"How to create a Notus Wallet?"),(0,i.kt)("h4",{id:"creating-keywords"},"Creating Keywords"),(0,i.kt)("p",null,"The BIP39 standard word list is used to generate the wallet address. Other networks use lists of 12 or 24 words. Notus Network accepts this number as 16 words as standard. Using 16 words, it creates a wallet address where the same words cannot be found together."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"function SeedPhraseList(): string[] {\n  var wordList: string[] = [];\n  for (var i = 0; i < Default_WordListArrayCount; i++) {\n    wordList[i] = Bip39Keyword(\n      parseInt(\n        new BN(\n          Sha1Hash(\n            new Date().toLocaleTimeString() +\n              Md5Hash(\n                new Date().toLocaleString() +\n                  getRandomInt(10000000, Number.MAX_SAFE_INTEGER).toString()\n              )\n          ),\n          16\n        )\n          .toString(10)\n          .substring(0, 4)\n      )\n    );\n  }\n\n  return wordList;\n}\n\nfunction Bip39Keyword(Bip39WordIndexNo: number): string {\n  Bip39WordIndexNo = Math.abs(Bip39WordIndexNo);\n\n  while (true) {\n    if (Bip39WordArray.length > Bip39WordIndexNo) {\n      break;\n    } else {\n      Bip39WordIndexNo -= Bip39WordArray.length;\n    }\n  }\n\n  return Bip39WordArray[Bip39WordIndexNo];\n}\n")),(0,i.kt)("h4",{id:"private-key"},"Private Key"),(0,i.kt)("p",null,"Private Key is a 256-bit (32-byte) key because the Prime256v1 algorithm is used."),(0,i.kt)("p",null,"The formed words are combined with a delimiter character. This delimiter cannot be any letter or number."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Input = "giggle","injury","bracket","treat","olive","cave","sheriff","kiwi","grow","human","appear","fat","pulse","radar","method","myth"\nOutput = giggle:injury:bracket:treat:olive:cave:sheriff:kiwi:grow:human:appear:fat:pulse:radar:method:myth\n')),(0,i.kt)("p",null,"The MD5 hash of the generated words is taken one by one."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Input = "giggle","injury","bracket","treat","olive","cave","sheriff","kiwi","grow","human","appear","fat","pulse","radar","method","myth"\nOutput\n-\n719a464002575321cf4e1b985ba98007\n7ff983fb58f776769fdfdc8faa69662b\n45b3afaeaba670a3c67dcae1c8e5f8af\n15bf1e390b0cbe5d40cdbcdf326e6123\nf431b0eea3c08186ed101e588bfb3a2f\ne386df9ee22e271da0b7d489447870ff\n37615e072eace5a9287437b9c1b42712\nde5949721e6352f01dfef317c3e898a8\n4d200fce73a8e1cc965cfc2c43343824\n99e9bae675b12967251c175696f00a70\nfb67f8d67111c4f85b8abb1327308b4f\n0d8dc086e16e3ac48f05d555994da7d7\n02a8dc4cf01fed584c6423f577c0b0d7\n50b7fe4da64720232c25bc7c6d66f6c5\nea9f6aca279138c58f705c8d4cb4b8ce\n9b87b1ff71e8b4a5a0711c3d82f5bcba\n')),(0,i.kt)("p",null,"The SashaHash of the combination of all words is taken twice."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"SashaHash(SashaHash(allWords) + : + allWords)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Output\n-\n7f74a2d907a8ee1a6cef35dd886247fec7e28403e4f101f5a5127c6ae0acdc2aa5981edf75bc056e98bc218443139232cea\n1fd53f1efe1753c34d2fbe055c0a23169134bc6ddf78d1f48838ab2d450364388ea91fcf1fafe6712291000917a56e19\nd151dc42a1391fc2a4d7a612484df3e06df6da950d31\n")),(0,i.kt)("p",null,"The sasha output produced with the MD5 hashes produced in a loop is summed, and the Sha1 hash is taken and the hexi is reduced by 2."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"hash[i] = shrinkHex(Sha1Hash(sashaHashOutput + : + hash[i]), 2)\nresult += hash[i]\n")),(0,i.kt)("p",null,"The value that comes out of the loop is taken as a private key."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Output\n-\n7d9bdc8bb285bcc44d4805a5b3fc524194fe5305f6120e764f31ff00c244f915\n")),(0,i.kt)("h4",{id:"public-key"},"Public Key"),(0,i.kt)("p",null,"Public Key ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Elliptic-curve_cryptography"},'"',(0,i.kt)("em",{parentName:"a"},"Eliptic Curve Cryptography"),'"')," is an address created from X and Y points using Private Key. Unlike Bitcoin, Notus Network uses the Prime256v1 algorithm."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Output\n-\n19eb745ebf2864ee8bb21bf2617d073c3e4ae5b92ee40cd335260b80ddf1f29e63c9199d7692906c43f553de0ec812e2f0ab2560066956950c389c7b5985fe82\n")),(0,i.kt)("h4",{id:"wallet-address"},"Wallet Address"),(0,i.kt)("p",null,"A wallet address is a combination of numbers and letters. The wallet address is created by passing the Public Key through several steps."),(0,i.kt)("p",null,"0 is added to the beginning of the x and y points of the Public Key."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"publicCords = 0 + publicKey.X + 0 + publicKey.Y")),(0,i.kt)("p",null,"The mode of the Public Key with the last letter of the Y value or the number 2 is taken. If the result is 0, 20 is added to the beginning of the X value of the Public Key, otherwise 30 is added."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'pubCorsMain =\n  (parseInt(publicKey.Y.substring(publicKey.Y.length - 1), 16) % 2 == 0\n    ? "020"\n    : "030") + pubCorsX;\n')),(0,i.kt)("p",null,"The network type of the created wallet address also affects the output of the wallet address to be created.\nChange list according to network types:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Network Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Byte String"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Network Type Text"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Mainnet"),(0,i.kt)("td",{parentName:"tr",align:"left"},"10"),(0,i.kt)("td",{parentName:"tr",align:"left"},"NR")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Testnet"),(0,i.kt)("td",{parentName:"tr",align:"left"},"20"),(0,i.kt)("td",{parentName:"tr",align:"left"},"NT")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Devnet"),(0,i.kt)("td",{parentName:"tr",align:"left"},"30"),(0,i.kt)("td",{parentName:"tr",align:"left"},"ND")))),(0,i.kt)("p",null,"First, the SashaHash is taken twice, reducing the hex by 22. As a result, the first hash is obtained."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"hash1 = shrinkHex(SashaHash(SashaHash(pubCorsMain)), 22);\n")),(0,i.kt)("p",null,"Then again, the SashaHash is taken twice, its hex is reduced by 4. As a result, the second hash is obtained."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"hash2 = shrinkHex(SashaHash(SashaHash(networkTypeByte + publicCords)), 4);\n")),(0,i.kt)("p",null,'The two hashes and "',(0,i.kt)("em",{parentName:"p"},"Network Type Byte"),'" obtained as the last operation are summed. The base58 encoding of the aggregated value is taken and "',(0,i.kt)("em",{parentName:"p"},"Network Type String"),'" is prepended. As a result, the wallet address is obtained.'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"walletKey = networkTypeString + bs58encode(networkTypeByte + hash1 + hash2, 36);\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Output\n-\nNREAj7a29qz1GhXoX88ebRd7zMXtiWMyyy6QkG\n")),(0,i.kt)("h3",{id:"heritage-based-wallet"},"Heritage-Based Wallet"),(0,i.kt)("p",null,'One of the biggest problems that has arisen with the spread of the blockchain is the problem of forgetting the wallet private key or seed phrases. Even in Bitcoin, which has a supply of only twenty-one million, it is estimated that close to one million Bitcoins cannot be reached due to the wallet owners forgetting or losing their passwords. Another feature developed for wallets with "Complex Block Architecture" and "State-Based Block Architecture", which are the main carriers of Notus Network design, is "Heritage-Based System".'),(0,i.kt)("p",null,"The mechanism of operation of this feature is as follows."),(0,i.kt)("p",null,"Wallet holders authorize inheritance for the assets in their account, provided that they are transferred to a different wallet (either a personal wallet or a friend's wallet address) within a certain period of time. At the end of this period, it can automatically transfer all its assets to the wallet to which it is authorized to inherit. Even if the wallet owners have forgotten their passwords, they can ensure that all the assets in their accounts are transferred to the wallet to which they are authorized to inherit."),(0,i.kt)("p",null,"The Heritage-Based wallet can also be used for different purposes."),(0,i.kt)("p",null,"\xb7 It can be used as a bequest or donation of assets to private or corporate organizations in real terms. ",(0,i.kt)("br",null),"\n\xb7 It can be used for the certainty of the payment of the debt for future debt payments. ",(0,i.kt)("br",null),"\n\xb7 Offering a more secure payment infrastructure, it can enable people to move more comfortably and without a doubt. ",(0,i.kt)("br",null)),(0,i.kt)("p",null,"For example;\n\xb7 Suppose John owns a wallet on the Notus network. ",(0,i.kt)("br",null),"\n\xb7 John chooses a different wallet as heir for the assets in his Notus wallet. ",(0,i.kt)("br",null),"\n\xb7 John chooses the date on which the assets in his wallet will be transferred to the heir wallet. ",(0,i.kt)("br",null),"\n\xb7 Even if John has forgotten the password of his wallet by the date he determined, his assets will be transferred. ",(0,i.kt)("br",null),"\n\xb7 John can use all his assets as he wishes by reaching the heir's wallet or transferring them to the person he chooses as heir. ",(0,i.kt)("br",null)),(0,i.kt)("h3",{id:"time-based-cold-wallet"},"Time-Based Cold Wallet"),(0,i.kt)("p",null,'Along with the new architecture it has designed, Notus has also made available a protected wallet structure called "Time-Based Wallet". Your wallet and all the assets in it are protected and locked until the date you set in Time-Based Wallet. Even if your wallet is taken over by malicious people and they know the private key of your account, they cannot make any transactions with the wallet until the date you specify. Using the Time-Based Wallet and Heritage-Based Wallet features at the same time will allow you to have highly protected wallets.'),(0,i.kt)("p",null,"When you want to use Time-Based Wallet, you will be asked to set a password with a minimum of 8 digits and a maximum of 32 digits. The password you set is required for you to perform the first transaction you will take after logging into your account, which was locked on the wallet opening date. This extra layer of security takes the protection of the assets in your wallet one step further."))}p.isMDXComponent=!0},5556:function(e,t,a){t.Z=a.p+"assets/images/block_architecture-f2ab0ede93a6bc33505da20aabc7f92e.jpg"},5503:function(e,t,a){t.Z=a.p+"assets/images/block_node_architecture-b69f9c5d31d8362f576825f5519bae0e.jpg"},1867:function(e,t,a){t.Z=a.p+"assets/images/float_calculation-7f52051604a7a9b624c363a3a701097e.jpg"},9844:function(e,t,a){t.Z=a.p+"assets/images/jump_calculation-93adda4e12fdcecca3826582c7df2b99.jpg"},7641:function(e,t,a){t.Z=a.p+"assets/images/transaction_protocol-510e63c0dcc5aa1fccafbfa43d025af6.jpg"}}]);